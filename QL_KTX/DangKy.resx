<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKT0AAwElJAL9CNAC+ZQQAyFsVALmG
        hAC8fVsAxHhWAMZ0TgDFcksAwm1IAMZ1TADEdlAAuXZZALKFdACybGAAxkQEAMBEPAC/QD0Ask1NAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAz2QuAM9lNQDNbTgBzGYoA9ppHQPmbxkD63IbA+12GgPxdxID93oQAvp+DgL9gQ0C/oINAv+D
        DgL8fg0C+noOAvd1DgLybw8D6m0XA+ZsHQPiZhoD22EcA8xaIgPBXDIDv2ZEAL5jRADAYDwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/6FIAN12OADedzwBuls7AMhe
        JwDVYBkA4mYVAOdnFgDpbBQA7GoLAPRsCQD0cAMA9XMBAPt2AgD/eQIA93EDAPJtBAD0aQYA72MMAOZl
        FADjYhkA3VwVANdYGADIVCEAvVk0AKdeUwC/ZkgAwGRDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+YRwDYdDoB2XY9ALZePhjEYS5bzWEmeNRkIorYZh+X22gdntxq
        HaPdbB6p3m0frd5uH7DebiCy3m0gst5tILHdayCv22ggq9pmIKfYYx+h1WAgm9BcIpPMWiWEwlgrcrpb
        N0+mYFAMvmdLAL5lRgDQdEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADhh0MA551qAOecaQvgfDDX4ngi/+h+IP/thSL/8Iwm//KRK//0li//9Zoy//acNP/2nTb/9p03//ac
        N//1mjX/9Jcz//OSMP/xjS3/7ogq/+yCKP/oeyb/43Ik/9tnIP/TYCX/z2g4seFPAAC1OgcCkz81AXwp
        LgB8Ky8AeycqAHckJwB0LC8Acjk+AHI7QQBhFRIAAAAAAAAAAAAAAAAA8JtAAfKaRgDxmkch9Z4z9vmq
        Nv79tUL6/rtK+/++Tfv/v0z7/79J+/++Rvv/vET7/7tD+/+5Qvv+t0D7/rU9+/2xOfv9rjb7/Koz+/qm
        Mfv5oi/7954w+/SaMvvwkDD55nsm/95tKdn/4/8AWk9kAAA0YgAcU2oAAHCMAAC15wAA//8A/wAAALQA
        AAGNGBkDjTA2AYgqMACJJioAAAAAAP3AYAD7p1sA76txBP3GZNf+zGr//9R9/f/Scv7+zGH+/slU/v7E
        SP7/vz7+/rw6/v25Of7/tzH+/7Qt/v6yMP76rzL++6wu/vuqLf76qCz++aUq/veiK/72oC/+9KE5+++a
        Pf/lhDOw//8AAF9lVwkqW2QGBG2IBACv1wIA//8A/wAAAP8AAACjAAAAiBgaAIkzPACGKzIBhyctAAAA
        AAD6/fsA/+GYA/7glgD+46OI/t6U//7gmfn+2X3//tFh/v/JSP7/wDX//bow//y0Lf/+qCX/559A/9mY
        S//pkzD/95Qd//GYJf/ymSP/9Jwk//WgJ//1oir/9aIv/vKiNv72rEr/qkQl7X4MENqKGBXdixYU244W
        FdmPFhXVjxYV0Y0WFsuKGBjEgxobt4AjJ56FNT0rhjA2AIUtMgEAAAAAAAAAAP7zyAH/+9wA/vncFv7r
        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
        v3AVgr4AFYK+AwKrvgAAAAAAAAAAAAAAAAAAAAAAfef/AFDG8QNQx/IAVMnzZ0q/7f9CuOj7Pbro/iSS
        0v5zsPD/ksz+/0iJ3P8igMn/JJjP/y6p2/81suP/N7Pm/zOv4/8wq9//Mavg/y2s3/9LrOb/hsD//4C+
        /v+Avf3/gb///4LA//+Cvf//YJTn/ww9k/8DXpf+GYvE/BuLxP8hlc5NIZXNACCTygMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABy3fkCe+X9AHzm/DRXyvL/SLzr/kS66v4zruD+LXS2/jaO0f8tp9v/QLzp/0S8
        7P8/t+j/ObHk/zSu4v8xrOD/MKzg/zWv4/80ruL/ZrLz/4jD//+FxP7/jsn//4K5/v9jmen/OnTJ/w5W
        pf8KcKv+IZbN/iSXzv8nndT6M67lKDKu5QAvqN4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAren0AP//
        /wAAAMYAdNv20FTM8v9MwO77PLHk/yGQyP48t+b+Rr3s/kK36P8/tuf/O7Pl/zex4/4zruL/Ma3h/jSu
        4v48tuf/MZzb/l6X7f+V0v//h779/1eW4f8nd8T/FHe6/xWGv/8ims7+KqLY/iqg1v0rotj/NLDl2HDr
        /wRj3v8APbbpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMT//wCV6PoDnOr8AKTo+liE4ff/XtHz/0fA
        7ftMw/D+Rrvq/0G36P5At+j+Prbn/jqz5f42sOP+Mq7i/zSv4/45sOT+Rbnr/y2m3P5FjdX+ca/s/y6K
        zv8fk8z/LKrb/zKx4v8xrOD/LKLZ/ime1f8poNb7Mq3h/0S875Q8uu4AOrfsA2PI5QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACC3P8A///vAD7W+wF24foAvOr4epDi9/h+3PX/bNTy/0S97PtEuOn+QLfn/jy0
        5v44suT+Na/i/jOu4vs3r+T9RLrr/Ui96/4zsOP/Gnm1/iOQyf4wsOH+OrXn/zWw5P8vqd7/KqHX/ieb
        0v4nm9P+K6Ta/Ty26P9azfg2Ws37AFDG9AIwnsMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/5
        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
        AAA=
</value>
  </data>
</root>